@model Co_Operations.Models.TransactionModels.TransactionEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TransactionEdit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TransactionID)

        <div class="form-group">
            @Html.LabelFor(model => model.LocationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationID", (IEnumerable<SelectListItem>)ViewBag.Locations, "Select Location", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <fieldset>
            <legend>Products</legend>
            <table id="submissionTable" class="table table-bordered">
                <thead>
                    <tr>
                        <td>Product SKU</td>
                        <td>Quantity</td>
                        <td></td>
                    </tr>
                </thead>

                @foreach (var product in Model.Products)
                {
                    <tr id=@("tablerow" + Model.Products.IndexOf(product))>
                        <td>
                            <div class="editor-field">
                                <input class="text-box single-line" name=@("ProductSKU[" + Model.Products.IndexOf(product) + "]") type="text"
                                       value=@(product.ProductSKU) required="required" />
                            </div>
                        </td>
                        <td>
                            <div class="editor-field">
                                <input class="text-box single-line" name=@("Quantity[" + Model.Products.IndexOf(product) + "]") type="number"
                                       value=@(product.Quantity) required="required" />
                            </div>
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary" onclick="removeTr(@Model.Products.IndexOf(product));">Delete</button>
                        </td>
                    </tr>
                }
            </table>

            <p>
                <button id="add" class="btn btn-primary">Add Product</button>
            </p>

            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </fieldset>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    <script type="text/javascript">
        var counter = @Model.Products.Count;
        $(function () {

            $('#add').click(function () {
                $('<tr id="tablerow' + counter + '"><td>' +
                    '<input type="text" class="text-box single-line" name="ProductSKU[' + counter + ']" value="" required="required" />' +
                    '</td>' +
                    '<td>' +
                    '<input type="number" class="text-box single-line" name="Quantity[' + counter + ']" value="" required="required" />' +
                    '</td>' +
                    '<td>' +
                    '<button type="button" class="btn btn-primary" onclick="removeTr(' + counter + ');">Delete</button>' +
                    '</td>' +
                    '</tr>').appendTo('#submissionTable');
                counter++;
                return false;
            });
        });
        function removeTr(index) {
            if (counter > 1) {
                $('#tablerow' + index).remove();
                counter--;
            }
            return false;
        }
    </script>
}
